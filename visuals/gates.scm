(define gate (build-torus 0.3 4 4 32))
(grab gate)(hide 1)(ungrab)

(define (gates id cross)
    (gain (c "gain" id))
    (blur (c "blur" id)
    (flxseed 1)
    (hint-depth-sort)
    (blend-mode 'src-alpha 'zero)
    (rotate (vadd (vmul (vector (time) (time) (time)) 30) (vmul (vector (gh 1) (gh 6) (gh 12)) 0.5)))
    (for ((i (build-list 16 values))
            #:when (> (gh i) 1))
        (let ((coeff-trans (c "scale-z-gh" id))
              (coeff-scale (c "scale" id #:coeff 2))
              (coeff-scale-gh (c "scale-gh" id))
              (param-scale (+ (+ (* 5 (flxrnd)) (- 16 i)) (* (gh 2) (c "scale-gh-base" id #:coeff 10)))))

            (opacity (+ 0.2 (* 0.1 (gh i))))
            (push)
                (translate (vmul (vector 0 0 (gh i)) coeff-trans))
                (scale (vadd (vmul (vector 1 1 1) coeff-scale)
                             (vmul (vector param-scale param-scale param-scale) coeff-scale-gh)))
                (colour (vmul (vector (gh i) (gh 5) (gh (+ i 5))) (c "colour" id)))
                (draw-instance gate)
            (pop)
            (push)
                (translate (vmul (vector 0 0 (gh i)) (* -1 coeff-trans)))
                (scale (vadd (vmul (vector 1 1 1) coeff-scale)
                             (vmul (vector param-scale param-scale param-scale) coeff-scale-gh)))
                (colour (vmul (vector (gh i) (gh 5) (gh (+ i 5))) (c "colour" id)))
                (draw-instance gate)
            (pop)
        )
    )
)

