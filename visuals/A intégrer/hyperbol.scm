(clear)
(set-gain! 0.4)
(define (hyperbol id cross)
    (let*
        (
            (ecart-z      0.1)
            (ecart-z-x    ecart-z)
            (ecart-z-y    ecart-z)
            (ecart-x-y    0.2)
            (size-plane   ecart-x-y)
            (ecart-x      ecart-x-y)
            (ecart-y      ecart-x-y)
            (trans-z-gh   0.5)
            (trans-z-x-gh trans-z-gh)
            (trans-z-y-gh trans-z-gh)
            (scale-gh     1.5)
            (rot-z        1)
        )
    (letrec
        (
            (hyperbol-sub-line
                (lambda (i j s)
                    (translate (vector (* ecart-x s) 0 0))
;                    (translate (vector 0 0 (* (- (get-num-frequency-bins) i) ecart-z-x)))
                    (translate (vmul (vector 0 0 (* (- (get-num-frequency-bins) i) ecart-z-x)) (* trans-z-x-gh (gl i))))
                    (colour (hsv->rgb (vector (* (vdist (vector i j 0) (vector 0 0 0)) 0.05) 1 (max (gl i) (gl j)))))
                    (push)
;                        (rotate (vector 0 0 (* 100 (time))))
                        (rotate (vector 0 0 (+ (* -100 (time)) (gl i))))
                        (scale size-plane)
                        (scale (vmul (vector (gl i) (gl j) 0) scale-gh))
                        (draw-plane)
                    (pop)
                    (unless (zero? i)
                        (hyperbol-sub-line (- i 1) j s)
                    )
                )
            )
            (hyperbol-sub
                (lambda (n s)
                    (translate (vector 0 (* ecart-y s) 0))
;                    (translate (vector 0 0 (* (- (get-num-frequency-bins) n) ecart-z-y)))
                    (translate (vmul (vector 0 0 (* (- (get-num-frequency-bins) n) ecart-z-y)) (* trans-z-y-gh (gl n))))
                    (push)
;(rotate (vector (* 100 (time)) 0 0))
;(rotate (vector 0 0(* 100 (time))))
                    (hyperbol-sub-line (get-num-frequency-bins) n s)
                    (pop)
                    (push)
;(rotate (vector (* 100 (time)) 0 0))
;(rotate (vector 0 0(* 100 (time))))
                    (hyperbol-sub-line (get-num-frequency-bins) n (* -1 s))
                    (pop)
                    (unless (zero? n)
                        (hyperbol-sub (- n 1) s)
                    )
                )
            )
        )
        (rotate (vmul (vector 0 0 (time)) (* -1 rot-z)))
        (push)
        (hyperbol-sub (get-num-frequency-bins) 1)
        (pop)
        (push)
        (hyperbol-sub (get-num-frequency-bins) -1)
        (pop)
    )
    )
)

(every-frame (hyperbol 1 1))